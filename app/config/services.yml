
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
        #Conditions roles
    password_manager_core.UserCondition:
            class:   PasswordManager\Bundle\CoreBundle\UserCondition\PasswordManagerUserCondition
            arguments: ["@security.token_storage"]
            public: true
    #Authentication service for Ldap
    app.ldap:
        class: Symfony\Component\Ldap\Ldap
        factory:
            - 'Symfony\Component\Ldap\Ldap'
            - 'create'
        arguments:
                    - 'ext_ldap'
                    -
                        host: %host%
                        port: 389
                        version: 3
                        encryption: 'none'
    #Provider service
    app.provider.ldap:
            class: PasswordManager\Bundle\UserBundle\Security\LdapUserProvider
            arguments:
                - "@app.ldap"
                - "%ldap_base_dn%"
                - "%ldap_dn_admin%"
                - "%ldap_password%"
                - [ROLE_USER]
                - "uid"
                - "@doctrine.orm.default_entity_manager"

    admin.advert:
        class: PasswordManager\Bundle\PlatformBundle\Admin\AdvertAdmin
        arguments: [~, PasswordManager\Bundle\PlatformBundle\Entity\Advert, ~]
        tags:
         - { name: sonata.admin, manager_type: orm, label: Advert }
        public: true
    admin.user:
            class: PasswordManager\Bundle\UserBundle\Admin\UserAdmin
            arguments: [~, PasswordManager\Bundle\UserBundle\Entity\User, ~]
            tags:
             - { name: sonata.admin, manager_type: orm, label: User }
            public: true
    admin.group:
                class: PasswordManager\Bundle\UserBundle\Admin\GroupAdmin
                arguments: [~, PasswordManager\Bundle\UserBundle\Entity\Group, ~]
                tags:
                 - { name: sonata.admin, manager_type: orm, label: Group }
                public: true
