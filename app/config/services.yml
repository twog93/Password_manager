# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
    password_manager_core.UserCondition:
            class:   PasswordManager\Bundle\CoreBundle\UserCondition\PasswordManagerUserCondition
            arguments: ["@security.token_storage"]
            public: true

    Symfony\Component\Ldap\Ldap:
            arguments: ['@Symfony\Component\Ldap\Adapter\ExtLdap\Adapter']
    Symfony\Component\Ldap\Adapter\ExtLdap\Adapter:
            arguments:
                -   host: 159.180.228.235
                    port: 389
                    #encryption: tls
                    options:
                        protocol_version: 3
                        referrals: true

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
  # ...
#    app.form.registration:
#        class: PasswordManager\Bundle\UserBundle\Form\RegistrationType
#        tags:
#            - { name: form.type, alias: app_user_registration }
  # ...Add path for admin form
    admin.advert:
        class: PasswordManager\Bundle\PlatformBundle\Admin\AdvertAdmin
        arguments: [~, PasswordManager\Bundle\PlatformBundle\Entity\Advert, ~]
        tags:
         - { name: sonata.admin, manager_type: orm, label: Advert }
        public: true
    admin.user:
            class: PasswordManager\Bundle\UserBundle\Admin\UserAdmin
            arguments: [~, PasswordManager\Bundle\UserBundle\Entity\User, ~]
            tags:
             - { name: sonata.admin, manager_type: orm, label: User }
            public: true
    admin.group:
                class: PasswordManager\Bundle\UserBundle\Admin\GroupAdmin
                arguments: [~, PasswordManager\Bundle\UserBundle\Entity\Group, ~]
                tags:
                 - { name: sonata.admin, manager_type: orm, label: Group }
                public: true